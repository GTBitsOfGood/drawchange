version: 2
jobs:
  frontend_lint:
    docker:
      - image: node:10.14.2
    working_directory: /home/drawchange
    steps:
      - checkout
      - run:
          command: |
            cd frontend
            yarn
            yarn format:check
  backend_lint:
    docker:
      - image: node:10.14.2
    working_directory: /home/drawchange
    steps:
      - checkout
      - run:
          command: |
            cd backend
            yarn
            yarn format:check
  backend_test:
    docker:
      - image: node:10.14.2
    working_directory: /home/drawchange
    steps:
      - checkout
      - run:
          command: |
            cd backend
            yarn
            yarn test
  frontend_build:
    docker:
      - image: node:10.14.2
    working_directory: /home/drawchange
    steps:
      - checkout
      - run:
          command: |
            cd frontend
            yarn
            yarn build
workflows:
  version: 2
  build_test:
    jobs:
      - frontend_lint
      - frontend_build
      - backend_lint
      - backend_test



# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       - image: circleci/node:10.14.2

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/mongo:3.4.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#           - v1-dependencies-{{ checksum "package.json" }}
#           # fallback to using the latest cache if no exact match is found
#           - v1-dependencies-

#       - run: npm install --no-optional

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # run tests!
#       - run: npm test


